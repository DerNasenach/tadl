// Code generated by go generate; DO NOT EDIT.
package parser2

import "github.com/golangee/tadl/token"

const (
	TokenCharData        TokenType = "TokenCharData"
	TokenIdentifier      TokenType = "TokenIdentifier"
	TokenBlockStart      TokenType = "TokenBlockStart"
	TokenBlockEnd        TokenType = "TokenBlockEnd"
	TokenGroupStart      TokenType = "TokenGroupStart"
	TokenGroupEnd        TokenType = "TokenGroupEnd"
	TokenGenericStart    TokenType = "TokenGenericStart"
	TokenGenericEnd      TokenType = "TokenGenericEnd"
	TokenG2Preambel      TokenType = "TokenG2Preambel"
	TokenDefineElement   TokenType = "TokenDefineElement"
	TokenDefineAttribute TokenType = "TokenDefineAttribute"
	TokenAssign          TokenType = "TokenAssign"
	TokenG1LineEnd       TokenType = "TokenG1LineEnd"
	TokenComma           TokenType = "TokenComma"
	TokenPipe            TokenType = "TokenPipe"
	TokenG1Comment       TokenType = "TokenG1Comment"
	TokenG2Comment       TokenType = "TokenG2Comment"
)

func (t *CharData) tokenType() TokenType {
	return TokenCharData
}

func (t *CharData) position() *token.Position {
	return &t.Position
}

func (t *Identifier) tokenType() TokenType {
	return TokenIdentifier
}

func (t *Identifier) position() *token.Position {
	return &t.Position
}

func (t *BlockStart) tokenType() TokenType {
	return TokenBlockStart
}

func (t *BlockStart) position() *token.Position {
	return &t.Position
}

func (t *BlockEnd) tokenType() TokenType {
	return TokenBlockEnd
}

func (t *BlockEnd) position() *token.Position {
	return &t.Position
}

func (t *GroupStart) tokenType() TokenType {
	return TokenGroupStart
}

func (t *GroupStart) position() *token.Position {
	return &t.Position
}

func (t *GroupEnd) tokenType() TokenType {
	return TokenGroupEnd
}

func (t *GroupEnd) position() *token.Position {
	return &t.Position
}

func (t *GenericStart) tokenType() TokenType {
	return TokenGenericStart
}

func (t *GenericStart) position() *token.Position {
	return &t.Position
}

func (t *GenericEnd) tokenType() TokenType {
	return TokenGenericEnd
}

func (t *GenericEnd) position() *token.Position {
	return &t.Position
}

func (t *G2Preambel) tokenType() TokenType {
	return TokenG2Preambel
}

func (t *G2Preambel) position() *token.Position {
	return &t.Position
}

func (t *DefineElement) tokenType() TokenType {
	return TokenDefineElement
}

func (t *DefineElement) position() *token.Position {
	return &t.Position
}

func (t *DefineAttribute) tokenType() TokenType {
	return TokenDefineAttribute
}

func (t *DefineAttribute) position() *token.Position {
	return &t.Position
}

func (t *Assign) tokenType() TokenType {
	return TokenAssign
}

func (t *Assign) position() *token.Position {
	return &t.Position
}

func (t *G1LineEnd) tokenType() TokenType {
	return TokenG1LineEnd
}

func (t *G1LineEnd) position() *token.Position {
	return &t.Position
}

func (t *Comma) tokenType() TokenType {
	return TokenComma
}

func (t *Comma) position() *token.Position {
	return &t.Position
}

func (t *Pipe) tokenType() TokenType {
	return TokenPipe
}

func (t *Pipe) position() *token.Position {
	return &t.Position
}

func (t *G1Comment) tokenType() TokenType {
	return TokenG1Comment
}

func (t *G1Comment) position() *token.Position {
	return &t.Position
}

func (t *G2Comment) tokenType() TokenType {
	return TokenG2Comment
}

func (t *G2Comment) position() *token.Position {
	return &t.Position
}
