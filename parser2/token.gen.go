// Code generated by go generate; DO NOT EDIT.
package parser2

const (
	TokenCharData TokenType = "TokenCharData"
	TokenIdentifier TokenType = "TokenIdentifier"
	TokenBlockStart TokenType = "TokenBlockStart"
	TokenBlockEnd TokenType = "TokenBlockEnd"
	TokenGroupStart TokenType = "TokenGroupStart"
	TokenGroupEnd TokenType = "TokenGroupEnd"
	TokenGenericStart TokenType = "TokenGenericStart"
	TokenGenericEnd TokenType = "TokenGenericEnd"
	TokenG2Preambel TokenType = "TokenG2Preambel"
	TokenDefineElement TokenType = "TokenDefineElement"
	TokenDefineAttribute TokenType = "TokenDefineAttribute"
	TokenAssign TokenType = "TokenAssign"
	TokenG1LineEnd TokenType = "TokenG1LineEnd"
	TokenComma TokenType = "TokenComma"
	TokenPipe TokenType = "TokenPipe"
	TokenG1Comment TokenType = "TokenG1Comment"
	TokenG2Comment TokenType = "TokenG2Comment"
)

func (t *CharData) tokenType() TokenType {
	return TokenCharData
}

func (t *Identifier) tokenType() TokenType {
	return TokenIdentifier
}

func (t *BlockStart) tokenType() TokenType {
	return TokenBlockStart
}

func (t *BlockEnd) tokenType() TokenType {
	return TokenBlockEnd
}

func (t *GroupStart) tokenType() TokenType {
	return TokenGroupStart
}

func (t *GroupEnd) tokenType() TokenType {
	return TokenGroupEnd
}

func (t *GenericStart) tokenType() TokenType {
	return TokenGenericStart
}

func (t *GenericEnd) tokenType() TokenType {
	return TokenGenericEnd
}

func (t *G2Preambel) tokenType() TokenType {
	return TokenG2Preambel
}

func (t *DefineElement) tokenType() TokenType {
	return TokenDefineElement
}

func (t *DefineAttribute) tokenType() TokenType {
	return TokenDefineAttribute
}

func (t *Assign) tokenType() TokenType {
	return TokenAssign
}

func (t *G1LineEnd) tokenType() TokenType {
	return TokenG1LineEnd
}

func (t *Comma) tokenType() TokenType {
	return TokenComma
}

func (t *Pipe) tokenType() TokenType {
	return TokenPipe
}

func (t *G1Comment) tokenType() TokenType {
	return TokenG1Comment
}

func (t *G2Comment) tokenType() TokenType {
	return TokenG2Comment
}
